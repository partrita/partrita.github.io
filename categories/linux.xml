<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Biohacker (Posts about Linux)</title><link>https://partrita.github.io/</link><description></description><atom:link href="https://partrita.github.io/categories/linux.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2024 &lt;a href="mailto:partrita@gmail.com"&gt;Taeyoon Kim&lt;/a&gt; </copyright><lastBuildDate>Sun, 28 Jan 2024 00:25:39 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>miniforge: 파이썬과 R의 패키지 및 개발 환경 관리 도구</title><link>https://partrita.github.io/posts/miniforge/</link><dc:creator>Taeyoon Kim</dc:creator><description>&lt;h2&gt;파이썬과 R의 의존성 지옥&lt;/h2&gt;
&lt;p&gt;파이썬과 R에는 유용한 라이브러리들이 아주 많습니다. 그러다보니 여러 라이브러리들이 버전이 서로 충돌하거나 호환되지 않는 경우가 발생하곤 합니다. 예를 들어 A 라이브러리가 B 라이브러리 1.0 버전에 기반해 만들어졌는데 C 라이브러리가 B 라이브러리 2.0 버전을 요구한다면 A와 C를 동시에 사용할 수 없는 경우가 생깁니다.&lt;/p&gt;
&lt;p&gt;이런 의존성 문제를 해결하기 위해 다양한 방법론들이 등장했습니다. 파이썬의 경우에는 &lt;code&gt;venv + pip&lt;/code&gt;, &lt;code&gt;Pyenv&lt;/code&gt;, &lt;code&gt;Poetry&lt;/code&gt;, &lt;code&gt;Conda&lt;/code&gt;, &lt;code&gt;PDM&lt;/code&gt; 등과 같은 새로운 라이브러리를 이용해 프로젝트 별로 의존성을 관리할 수 있도록 합니다. 문제는 이런 도구들도 만능이 아니기에 의존성 지옥 탈출은 요원해 보입니다. &lt;/p&gt;
&lt;h2&gt;콘다(conda)&lt;/h2&gt;
&lt;p&gt;콘다는 Windows, macOS 및 Linux에서 실행되는 오픈 소스 패키지 관리 시스템이자 환경 관리 시스템으로 파이썬 뿐만 아니라 R 패키지도 지원합니다. 그래서 주로 과학 분야에서 많이 사용되는 도구입니다. 그러나 덩치가 커서 작은 프로젝트에는 너무 많은 의존성과 리소스를 잡아먹는다는 단점이 있죠.&lt;/p&gt;
&lt;h3&gt;miniforge&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/conda-forge/miniforge"&gt;miniforge&lt;/a&gt;는 덩치큰 아나콘다를 아주 날씬하게 만드는 프로젝트입니다. 그래서 아래와 같은 특징을 갖습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;기본(그리고 유일한) 채널로 conda-forge를 사용.&lt;/li&gt;
&lt;li&gt;표준 Python 인터프리터(일명 "CPython") 대신 PyPy에 대한 지원.&lt;/li&gt;
&lt;li&gt;콘다보다 더 빠른 맘바(mamba)도 지원.&lt;/li&gt;
&lt;li&gt;다양한 CPU 아키텍처(x86_64, ppc64le, Apple M1을 포함한 aarch64)지원.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;맘바(mamba)는 또 뭐죠?&lt;/h3&gt;
&lt;p&gt;콘다의 다른 단점에 라이브러리 설치 속도가 느리다는 점이 었습니다. 그래서 C++으로 작성된 맘바라는 도구가 새로 나오게 되었죠. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;파이썬 생태계는 이런 것이 특징입니다. 항상 새로운 도구가 우후죽순 나옵니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;맘바포지(mamba-forge)&lt;/h2&gt;
&lt;p&gt;맘바포지는 제가 생각하는 현재 시점에서 패키지와 개발 환경 관리 문제를 가장 쉽게 해결하는 도구입니다. 맘바포지를 설치하는 방법과 개발 환경을 설정을 알아보도록 하죠.&lt;/p&gt;
&lt;h3&gt;설치하기&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/conda-forge/miniforge/blob/main/README.md"&gt;공식문서&lt;/a&gt;에서 각각의 OS에 맞는 설치 방법을 찾아 볼 수 있습니다. 저는 리눅스를 사용하기에 아래 명령어로 설치 하였습니다.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;wget&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;uname&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;-&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;uname&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;.sh"&lt;/span&gt;
bash&lt;span class="w"&gt; &lt;/span&gt;Mambaforge-&lt;span class="k"&gt;$(&lt;/span&gt;uname&lt;span class="k"&gt;)&lt;/span&gt;-&lt;span class="k"&gt;$(&lt;/span&gt;uname&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="k"&gt;)&lt;/span&gt;.sh
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;개발 환경 설정&lt;/h3&gt;
&lt;h4&gt;가상환경 만들기&lt;/h4&gt;
&lt;p&gt;맘바포지의 &lt;code&gt;(base)&lt;/code&gt; 환경에 왠만하면 아무런 패키지를 설치하지 않을 것을 권장합니다. 따라서 새로운 가상환경인 &lt;code&gt;ipynb&lt;/code&gt;를 만들어 주피터랩을 사용해 보겠습니다.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;mamba&lt;span class="w"&gt; &lt;/span&gt;create&lt;span class="w"&gt; &lt;/span&gt;-n&lt;span class="w"&gt; &lt;/span&gt;ipynb&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;python&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.11&lt;span class="w"&gt; &lt;/span&gt;r-base&lt;span class="w"&gt; &lt;/span&gt;r-essentials&lt;span class="w"&gt; &lt;/span&gt;jupyterlab
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;콘다를 써본적 있으시다면 바로 아시겠지만 &lt;code&gt;conda&lt;/code&gt;를 &lt;code&gt;mamba&lt;/code&gt;로 바꾸기만 하면 됩니다. 결과는 아래와 같습니다.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="w"&gt;                  &lt;/span&gt;__&lt;span class="w"&gt;    &lt;/span&gt;__&lt;span class="w"&gt;    &lt;/span&gt;__&lt;span class="w"&gt;    &lt;/span&gt;__
&lt;span class="w"&gt;                 &lt;/span&gt;/&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;/&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
███████████████/&lt;span class="w"&gt;  &lt;/span&gt;/██/&lt;span class="w"&gt;  &lt;/span&gt;/██/&lt;span class="w"&gt;  &lt;/span&gt;/██/&lt;span class="w"&gt;  &lt;/span&gt;/████████████████████████
&lt;span class="w"&gt;              &lt;/span&gt;/&lt;span class="w"&gt;  &lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\_&lt;/span&gt;___
&lt;span class="w"&gt;             &lt;/span&gt;/&lt;span class="w"&gt;  &lt;/span&gt;/&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="se"&gt;\_&lt;/span&gt;/&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="se"&gt;\_&lt;/span&gt;/&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="se"&gt;\_&lt;/span&gt;/&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;o&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\_&lt;/span&gt;_,
&lt;span class="w"&gt;            &lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;_/&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="se"&gt;\_&lt;/span&gt;____/&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;/
&lt;span class="w"&gt;        &lt;/span&gt;███╗&lt;span class="w"&gt;   &lt;/span&gt;███╗&lt;span class="w"&gt; &lt;/span&gt;█████╗&lt;span class="w"&gt; &lt;/span&gt;███╗&lt;span class="w"&gt;   &lt;/span&gt;███╗██████╗&lt;span class="w"&gt;  &lt;/span&gt;█████╗
&lt;span class="w"&gt;        &lt;/span&gt;████╗&lt;span class="w"&gt; &lt;/span&gt;████║██╔══██╗████╗&lt;span class="w"&gt; &lt;/span&gt;████║██╔══██╗██╔══██╗
&lt;span class="w"&gt;        &lt;/span&gt;██╔████╔██║███████║██╔████╔██║██████╔╝███████║
&lt;span class="w"&gt;        &lt;/span&gt;██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║
&lt;span class="w"&gt;        &lt;/span&gt;██║&lt;span class="w"&gt; &lt;/span&gt;╚═╝&lt;span class="w"&gt; &lt;/span&gt;██║██║&lt;span class="w"&gt;  &lt;/span&gt;██║██║&lt;span class="w"&gt; &lt;/span&gt;╚═╝&lt;span class="w"&gt; &lt;/span&gt;██║██████╔╝██║&lt;span class="w"&gt;  &lt;/span&gt;██║
&lt;span class="w"&gt;        &lt;/span&gt;╚═╝&lt;span class="w"&gt;     &lt;/span&gt;╚═╝╚═╝&lt;span class="w"&gt;  &lt;/span&gt;╚═╝╚═╝&lt;span class="w"&gt;     &lt;/span&gt;╚═╝╚═════╝&lt;span class="w"&gt; &lt;/span&gt;╚═╝&lt;span class="w"&gt;  &lt;/span&gt;╚═╝

&lt;span class="w"&gt;        &lt;/span&gt;mamba&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.1.0&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;supported&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;@QuantStack

&lt;span class="w"&gt;        &lt;/span&gt;GitHub:&lt;span class="w"&gt;  &lt;/span&gt;https://github.com/mamba-org/mamba
&lt;span class="w"&gt;        &lt;/span&gt;Twitter:&lt;span class="w"&gt; &lt;/span&gt;https://twitter.com/QuantStack

█████████████████████████████████████████████████████████████


Looking&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'python=3.11'&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'r-base'&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'r-essentials'&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'jupyterlab'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
conda-forge/noarch&lt;span class="w"&gt;                                 &lt;/span&gt;@&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.7MB/s&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.2s
conda-forge/linux-64&lt;span class="w"&gt;                              &lt;/span&gt;&lt;span class="m"&gt;30&lt;/span&gt;.2MB&lt;span class="w"&gt; &lt;/span&gt;@&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;.2MB/s&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;7&lt;/span&gt;.3s


&lt;span class="w"&gt;  &lt;/span&gt;All&lt;span class="w"&gt; &lt;/span&gt;requested&lt;span class="w"&gt; &lt;/span&gt;packages&lt;span class="w"&gt; &lt;/span&gt;already&lt;span class="w"&gt; &lt;/span&gt;installed

Preparing&lt;span class="w"&gt; &lt;/span&gt;transaction:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;
Verifying&lt;span class="w"&gt; &lt;/span&gt;transaction:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;
Executing&lt;span class="w"&gt; &lt;/span&gt;transaction:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;

To&lt;span class="w"&gt; &lt;/span&gt;activate&lt;span class="w"&gt; &lt;/span&gt;this&lt;span class="w"&gt; &lt;/span&gt;environment,&lt;span class="w"&gt; &lt;/span&gt;use

&lt;span class="w"&gt;     &lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;mamba&lt;span class="w"&gt; &lt;/span&gt;activate&lt;span class="w"&gt; &lt;/span&gt;ipynb

To&lt;span class="w"&gt; &lt;/span&gt;deactivate&lt;span class="w"&gt; &lt;/span&gt;an&lt;span class="w"&gt; &lt;/span&gt;active&lt;span class="w"&gt; &lt;/span&gt;environment,&lt;span class="w"&gt; &lt;/span&gt;use

&lt;span class="w"&gt;     &lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;mamba&lt;span class="w"&gt; &lt;/span&gt;deactivate
&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;가상환경 활성화 하기&lt;/h4&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;mamba&lt;span class="w"&gt; &lt;/span&gt;activate&lt;span class="w"&gt; &lt;/span&gt;ipynb
&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;파이썬 라이브러리 설치하기&lt;/h4&gt;
&lt;p&gt;아래 명령어를 통해 쉽게 설치할 수 있습니다.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;mamba&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;pandas
&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;R 라이브러리 설치하기&lt;/h4&gt;
&lt;p&gt;R의 경우 보통 라이브러리 이름 앞에 &lt;code&gt;r-&lt;/code&gt;을 붙이면 됩니다만, 확실하지 않기 때문에 다음 &lt;code&gt;search&lt;/code&gt; 명령어를 통해 미리 확인하고 설치하면 좋습니다.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;mamba&lt;span class="w"&gt; &lt;/span&gt;search&lt;span class="w"&gt; &lt;/span&gt;r-tidyverse
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;위 명령어를 통해 해당 라이브러리가 존재한다는 것을 알 수 있습니다.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;mamba&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;r-tidyverse&lt;span class="w"&gt; &lt;/span&gt;-y
&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;라이브러리 제거하기&lt;/h4&gt;
&lt;p&gt;설치한 라이브러리를 제거하고 싶다면 아래 명령어를 사용합니다.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;mamba&lt;span class="w"&gt; &lt;/span&gt;remove&lt;span class="w"&gt; &lt;/span&gt;r-tidyverse
&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;의존성 파일로 저장하기&lt;/h4&gt;
&lt;p&gt;개발을 하다보면 배포 혹은 프로젝트간의 전환을 위해 의존성을 파일로 저장해야하는 경우가 생깁니다. 그럴 때에는 아래와 같이 하면 됩니다.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;mamba&lt;span class="w"&gt; &lt;/span&gt;env&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;env.yaml
&lt;/pre&gt;&lt;/div&gt;

&lt;h5&gt;의존성 파일로 부터 가상환경 만들기&lt;/h5&gt;
&lt;p&gt;위 명령어로 생성된 파일을 가지고 다음 명령어를 사용해 새로운 가상환경을 만들 수 있습니다.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;mamba&lt;span class="w"&gt; &lt;/span&gt;env&lt;span class="w"&gt; &lt;/span&gt;create&lt;span class="w"&gt; &lt;/span&gt;-f&lt;span class="w"&gt; &lt;/span&gt;env.yaml
&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;가상환경 비활성화하기&lt;/h4&gt;
&lt;p&gt;일반적으로는 그냥 터미널을 꺼버리고는 합니다만, 실수를 방지하기 위해 다음 명령어를 습관적으로 써주는 것이 좋습니다.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;mamba&lt;span class="w"&gt; &lt;/span&gt;deactivate&lt;span class="w"&gt; &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;끝으로,&lt;/h2&gt;
&lt;p&gt;파이썬과 R은 다양한 라이브러리를 사용해 프로젝트를 진행합니다. 그렇기에 라이브러리의 버전과 호환성을 관리하는 작업은 쉽지 않습니다. 여러 의존성 관리 도구들이 있지만 각각 장단점이 있고 개발자의 취향과 프로젝트의 요구사항에 따라 어떤 도구를 사용할지가 달라집니다. 파이썬과 R 라이브러리 관리에는 왕도가 없습니다. 최신 도구가 나오면 사용해보고 배우는 것을 멈추지 마세요.&lt;/p&gt;</description><category>Linux</category><category>miniforge</category><guid>https://partrita.github.io/posts/miniforge/</guid><pubDate>Mon, 13 Mar 2023 07:11:03 GMT</pubDate></item><item><title>리눅스 문제 해결</title><link>https://partrita.github.io/posts/linux-trouble-shooting/</link><dc:creator>Taeyoon Kim</dc:creator><description>&lt;h2&gt;리눅스 해상도 문제 해결하기&lt;/h2&gt;
&lt;p&gt;구형 컴퓨터에 리눅스(리눅스 민트)를 설치하였습니다. 저해상도로 고정되는 경우는 처음이었는데, 검색을 통해 아래와 같은 방법으로 해결했습니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;먼저 아래와 터미널에 아래와 같은 명령어를 칩니다. (예시로 1600×900을 사용했는데, 원하는 비율로 변경하시면 됩니다.)&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;cvt&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;900&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="mf"&gt;1600&lt;/span&gt;&lt;span class="n"&gt;x900&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;59.95&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Hz&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CVT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;1.44&lt;/span&gt;&lt;span class="n"&gt;M9&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hsync&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;55.99&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;kHz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pclk&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;118.25&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MHz&lt;/span&gt;
&lt;span class="n"&gt;Modeline&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"1600x900_60.00"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;118.25&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;1600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;1696&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;1856&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;2112&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;900&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;903&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;908&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;934&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;hsync&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;vsync&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;위에서 얻은 결과를 참고해 모니터 설정을 추가 합니다. 위의 결과의 뒷부분을 복사해서 붙여넣으면 됩니다.&lt;ul&gt;
&lt;li&gt;모니터 마다 결과가 다르니 꼭 1번단계를 통해 직접 명령어를 만들어야 합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;xrandr&lt;span class="w"&gt; &lt;/span&gt;--newmode&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1600x900_60.00"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;118&lt;/span&gt;.25&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1696&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1856&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2112&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;900&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;903&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;908&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;934&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-hsync&lt;span class="w"&gt; &lt;/span&gt;+vsync
&lt;span class="c1"&gt;# 새로운 모드를 만들고 아래와 같이 추가해줍니다.&lt;/span&gt;
xrandr&lt;span class="w"&gt; &lt;/span&gt;--addmode&lt;span class="w"&gt; &lt;/span&gt;VGA1&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1600x900_60.00"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;면이 깜박이면서 1600×900해상도가 새롭게 생깁니다. 하지만 재부팅을하면 다시 복구가 되므로 매번 명령어를 입력하는 불편이 있습니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;쉘 스크립트(fix-resolution.sh)를 작성합니다. 텍스트에디터로 만들어서 확장자만 변경하시면 됩니다.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="c1"&gt;# fix-resolution.sh&lt;/span&gt;
xrandr&lt;span class="w"&gt; &lt;/span&gt;--newmode&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1600x900_60.00"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;118&lt;/span&gt;.25&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1696&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1856&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2112&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;900&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;903&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;908&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;934&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-hsync&lt;span class="w"&gt; &lt;/span&gt;+vsync
xrandr&lt;span class="w"&gt; &lt;/span&gt;--addmode&lt;span class="w"&gt; &lt;/span&gt;VGA1&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1600x900_60.00"&lt;/span&gt;
xrandr&lt;span class="w"&gt; &lt;/span&gt;--output&lt;span class="w"&gt; &lt;/span&gt;VGA1&lt;span class="w"&gt; &lt;/span&gt;--mode&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1600x900_60.00"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;fix-resolution.desktop라는 파일도 만들어 줍니다.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="c1"&gt;# fix-resolution.desktop&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;Desktop&lt;span class="w"&gt; &lt;/span&gt;Entry&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Application
&lt;span class="nv"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;fix-resolution.desktop
&lt;span class="nv"&gt;Exec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/bin/fix-resolution.sh
&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;두개의 파일이 들어있는 디렉토리에서 터미널을 열고 다음의 명령어를 입력 합니다.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;cp&lt;span class="w"&gt; &lt;/span&gt;fix-resolution.sh&lt;span class="w"&gt; &lt;/span&gt;/usr/local/bin
chmod&lt;span class="w"&gt; &lt;/span&gt;+x&lt;span class="w"&gt; &lt;/span&gt;/usr/local/bin/fix-resolution.sh
cp&lt;span class="w"&gt; &lt;/span&gt;fix-resolution.desktop&lt;span class="w"&gt; &lt;/span&gt;/etc/xdg/autostart
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;파일을 복사해서 옮겨주는 것이라서, 생성하신 파일은 이제 삭제하셔도 됩니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;자주 사용하는 커맨드 Alias 만들기&lt;/h2&gt;
&lt;p&gt;터미널을 자주 사용하다보면 명령어 입력이 번거로울 때가 있습니다. 이럴 때를 위해서 Bash shell에서는 &lt;code&gt;Alias&lt;/code&gt;라는 기능을 제공하고 있습니다. 기능을 사용하기 위해서는 &lt;code&gt;~/.bashrc&lt;/code&gt; 파일의 수정이 필요합니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;bashrc 파일 열기&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;nano&lt;span class="w"&gt; &lt;/span&gt;~/.bashrc
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;nano 에디터로 파일을 열어줍니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Alias 명령어 추가하기
Alias 사용법은 다음과 같습니다. &lt;/li&gt;
&lt;/ol&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;alias l="ls -a"
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;‘l’을 치면 ‘ls -a’랑 같은 효과가 나도록 설정하였습니다. 이제 Ctrl+x를 눌러 파일을 저장합니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Bash shell 재실행
저장한 내용을 적용하기 위해 shell을 다시 실행 해야합니다.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="nb"&gt;source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;.bashrc
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;이제 'l'을 누르면 적용이 된것을 확인 할 수 있습니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;한글로 된 압축파일명이 깨지는 경우&lt;/h2&gt;
&lt;p&gt;윈도우에 많이 사용 되는 압축파일인 &lt;code&gt;.zip&lt;/code&gt;포멧은 리눅스에서 인코딩 문제로 자주 파일명이 깨집니다. 이러한 문제를 해결하려면 터미널 명령어 &lt;code&gt;unzip&lt;/code&gt;에 인코딩 옵션을 줘야 합니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;unzip 사용법
명령어의 사용법은 다음과 같습니다.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="nv"&gt;$unzip&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-O&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;인코딩&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;파일명&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;윈도우에서 많이 사용되는 인코딩은 cp949이므로, 아래와 같이 쓰면 됩니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;물론 인코딩을 미리 확인하고 사용하는게 좋습니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;터미널에 아래와 같이 입력하세요.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="nv"&gt;$unzip&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-O&lt;span class="w"&gt; &lt;/span&gt;cp949&lt;span class="w"&gt; &lt;/span&gt;한글.zip
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;위 방법을 이용하면 인코딩 깨짐 없이 무사히 압축을 해제할 수 있습니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;이 모든 삽질의 원인
zip파일은 거의 모든 압축포맷 중에 단연 최고의 사용률을 자랑하는 포맷입니다. 하지만 치명적인 단점이 있는데 바로 Unicode가 지원되지 않는 다는 것이죠. 그래서 인코딩이 깨지는 현상이 발생하게 되는 것입니다. 앞으로는 &lt;code&gt;7z&lt;/code&gt;와 같은 새로운 압축 포맷을 사용하는게 좋겠습니다.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2&gt;터미널에서 컴퓨터 하드웨어 정보 확인하기&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;리눅스 버전확인&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;~$&lt;span class="w"&gt; &lt;/span&gt;cat&lt;span class="w"&gt; &lt;/span&gt;/etc/issue
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;Ubuntu 15.04
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;사용중인 리눅스의 버전을 확인합니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;하드디스크 용량 확인&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;~$&lt;span class="w"&gt; &lt;/span&gt;df&lt;span class="w"&gt; &lt;/span&gt;-h
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;Filesystem Size Used Avail Use% Mounted on
udev 3.8G 0 3.8G 0% /dev
tmpfs 771M 26M 746M 4% /run
/dev/sda5 33G 15G 17G 46% /
tmpfs 3.8G 604K 3.8G 1% /dev/shm
tmpfs 5.0M 4.0K 5.0M 1% /run/lock
tmpfs 3.8G 0 3.8G 0% /sys/fs/cgroup
cgmfs 100K 0 100K 0% /run/cgmanager/fs
tmpfs 771M 48K 771M 1% /run/user/1000
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;3번째 줄에서 총 공간이 총 33G이고 15G를 사용하고 있음을 확인합니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;CPU 코어 갯수 확인&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;~$&lt;span class="w"&gt; &lt;/span&gt;cat&lt;span class="w"&gt; &lt;/span&gt;/proc/cpuinfo&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;grep&lt;span class="w"&gt; &lt;/span&gt;processor&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;wc&lt;span class="w"&gt; &lt;/span&gt;-l
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="mf"&gt;8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;코어의 갯수가 8개 임을 알수 있습니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;램 사용량 확인&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;~$&lt;span class="w"&gt; &lt;/span&gt;free&lt;span class="w"&gt; &lt;/span&gt;-m
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;total used free shared buffers cached
Mem: 7708 2690 5017 161 351 669
-/+ buffers/cache: 1669 6038
Swap: 0 0 0
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;전체 7708Mb에서 2618Mb를 사용하고 있습니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;헐리우드 해커 터미널&lt;/h2&gt;
&lt;p&gt;영화에 나오는 해커처럼 터미널에 복잡한것을 띄워 봅시다. 아래 코드를 터미널에 입력하면 랜덤하게 hex dump가 시작됩니다. &lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;hexdump&lt;span class="w"&gt; &lt;/span&gt;-C&lt;span class="w"&gt; &lt;/span&gt;/dev/urandom&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;GREP_COLOR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'1;32'&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;grep&lt;span class="w"&gt; &lt;/span&gt;--color&lt;span class="o"&gt;=&lt;/span&gt;auto&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'ca fe'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;hex dump는 램 또는 파일이나 저장장치에 있는 컴퓨터 데이터의 십육진법적인 보임새이다. 데이터의 hex dump를 보는 것은 주로 디버깅이나 리버스 엔지니어링의 한 부분이다.  -- 위키피디아&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;이와 비슷한 것으로 영화 &lt;strong&gt;메트릭스&lt;/strong&gt;에 나오는 화면도 시도해 보겠습니다.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="c1"&gt;# 먼저 cmatrix를 설치해야 합니다.&lt;/span&gt;
sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;cmatrix
&lt;span class="c1"&gt;# 실행합니다.&lt;/span&gt;
cmatrix
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;별 의미는 없지만 흥미롭습니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;죽은 프로세서 되살리기&lt;/h2&gt;
&lt;p&gt;서버 관리를 하다 보면, 죽으면 안되는 데몬이 갑자기 죽는 경우가 있다. 이런 경우를 대비해 데몬이 죽었으면 재 실행 시켜 주는 스크립트를 만들어 보겠습니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;쉘 스크립트 작성
아파치 데몬이 죽었을 경우 자동 재 시작하는 스크립트를 작성해보겠습니다. 아래와 같은 내용의 쉘 스크립트 파일을 만듭니다. 파일명은 &lt;code&gt;revive.sh&lt;/code&gt;로 하겠습니다.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="c1"&gt;# revive.sh&lt;/span&gt;
&lt;span class="c1"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nv"&gt;http&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"`pgrep http  | wc -l`"&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$http&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-eq&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"0"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
/usr/local/apache/bin/apachectl&lt;span class="w"&gt; &lt;/span&gt;restart
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;http&lt;/code&gt;라는 변수에 &lt;code&gt;pgrep http&lt;/code&gt;로 아파치 프로세서의 갯수를 세어 저장합니다. 그리고, &lt;code&gt;if&lt;/code&gt;문에서 &lt;code&gt;http&lt;/code&gt;변수에 들어 있는 값이 0이라면 아파치를 재시작 합니다. 위의 스크립트를 &lt;code&gt;revive.sh&lt;/code&gt; 로 저장하고, 터미널에 다음과 같이 입력합니다.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;$&lt;span class="w"&gt; &lt;/span&gt;chmod&lt;span class="w"&gt; &lt;/span&gt;-x&lt;span class="w"&gt; &lt;/span&gt;revive.sh
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;이는 퍼미션을 주기 위한 것입니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;크론(cron)에 등록해서 1분마다 확인하기
리눅스에서는 정기적으로 반복되는 작업을 위한 &lt;code&gt;cron&lt;/code&gt;이라는 서비스가 있습니다. 크론으로 1분에 한번씩 위의 스크립트가 작동되도록 하겠습니다. &lt;/li&gt;
&lt;/ol&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;crontab&lt;span class="w"&gt; &lt;/span&gt;-e
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;으로 크론을 실행한뒤 아래와 같이 입력합니다.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="k"&gt;*&lt;/span&gt; * &lt;span class="gs"&gt;* *&lt;/span&gt; * su - root -c '/root/revive.sh /dev/null'
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;파일을 저장한뒤 적용을 위해서는 로그오프가 필요합니다. &lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;우분투 단축키 모음&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;General keyboard shortcuts &lt;ul&gt;
&lt;li&gt;Ctrl + A = Select all&lt;/li&gt;
&lt;li&gt;Ctrl + C = Copy the highlighted content to clipboard&lt;/li&gt;
&lt;li&gt;Ctrl + V = Paste the clipboard content&lt;/li&gt;
&lt;li&gt;Ctrl + N = New (Create a new document, not in terminal)&lt;/li&gt;
&lt;li&gt;Ctrl + O = Open a document&lt;/li&gt;
&lt;li&gt;Ctrl + S = Save the current document&lt;/li&gt;
&lt;li&gt;Ctrl + P = Print the current document&lt;/li&gt;
&lt;li&gt;Ctrl + W = Close the close document&lt;/li&gt;
&lt;li&gt;Ctrl + Q = Quit the current application&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Keyboard shortcuts for GNOME desktop&lt;ul&gt;
&lt;li&gt;Ctrl + Alt + F1 = Switch to the first virtual terminal&lt;/li&gt;
&lt;li&gt;Ctrl + Alt + F2(F3)(F4)(F5)(F6) = Select the different virtual terminals&lt;/li&gt;
&lt;li&gt;Ctrl + Alt + F7 = Restore back to the current terminal session with X&lt;/li&gt;
&lt;li&gt;Ctrl + Alt + Backspace = Restart GNOME&lt;/li&gt;
&lt;li&gt;Ctrl + Alt + L = Lock the screen.&lt;/li&gt;
&lt;li&gt;Alt + Tab = Switch between open programs&lt;/li&gt;
&lt;li&gt;Alt + F1 = opens the Applications menu&lt;/li&gt;
&lt;li&gt;Alt + F2 = opens the Run Application dialog box.&lt;/li&gt;
&lt;li&gt;Alt + F3 = opens the Deskbar Applet&lt;/li&gt;
&lt;li&gt;Alt + F4 = closes the current window.&lt;/li&gt;
&lt;li&gt;Alt + F5 = unmaximizes the current window.&lt;/li&gt;
&lt;li&gt;Alt + F7 = move the current window&lt;/li&gt;
&lt;li&gt;Alt + F8 = resizes the current window.&lt;/li&gt;
&lt;li&gt;Alt + F9 = minimizes the current window.&lt;/li&gt;
&lt;li&gt;Alt + F10 = maximizes the current window. &lt;/li&gt;
&lt;li&gt;Alt + Space = opens the window menu.&lt;/li&gt;
&lt;li&gt;Ctrl + Alt + + = Switch to next X resolution&lt;/li&gt;
&lt;li&gt;Ctrl + Alt + - = Switch to previous X resolution&lt;/li&gt;
&lt;li&gt;Ctrl + Alt + Left/Right = move to the next/previous workspace&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Keyboard shortcuts for Terminal&lt;ul&gt;
&lt;li&gt;Ctrl + A = Move cursor to beginning of line&lt;/li&gt;
&lt;li&gt;Ctrl + E = Move cursor to end of line&lt;/li&gt;
&lt;li&gt;Ctrl + C = kills the current process.&lt;/li&gt;
&lt;li&gt;Ctrl + Z = sends the current process to the background.&lt;/li&gt;
&lt;li&gt;Ctrl + D = logs you out.&lt;/li&gt;
&lt;li&gt;Ctrl + R = finds the last command matching the entered letters.&lt;/li&gt;
&lt;li&gt;Enter a letter, followed by Tab + Tab = lists the available commands beginning with those letters.&lt;/li&gt;
&lt;li&gt;Ctrl + U = deletes the current line.&lt;/li&gt;
&lt;li&gt;Ctrl + K = deletes the command from the cursor right.&lt;/li&gt;
&lt;li&gt;Ctrl + W = deletes the word before the cursor.&lt;/li&gt;
&lt;li&gt;Ctrl + L = clears the terminal output&lt;/li&gt;
&lt;li&gt;Shift + Ctrl + C = copy the highlighted command to the clipboard.&lt;/li&gt;
&lt;li&gt;Shift + Ctrl + V (or Shift + Insert) = pastes the contents of the clipboard.&lt;/li&gt;
&lt;li&gt;Alt + F = moves forward one word.&lt;/li&gt;
&lt;li&gt;Alt + B = moves backward one word.&lt;/li&gt;
&lt;li&gt;Arrow Up/Down = browse command history&lt;/li&gt;
&lt;li&gt;Shift + PageUp / PageDown = Scroll terminal output &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Keyboard shortcuts for Compiz&lt;ul&gt;
&lt;li&gt;Alt + Tab = switch between open windows&lt;/li&gt;
&lt;li&gt;Win + Tab = switch between open windows with Shift Switcher or Ring Switcher effect&lt;/li&gt;
&lt;li&gt;Win + E = Expo, show all workspace&lt;/li&gt;
&lt;li&gt;Ctrl + Alt + Down = Film Effect&lt;/li&gt;
&lt;li&gt;Ctrl + Alt + Left mouse button = Rotate Desktop Cube&lt;/li&gt;
&lt;li&gt;Alt + Shift + Up = Scale Windows&lt;/li&gt;
&lt;li&gt;Ctrl + Alt + D = Show Desktop&lt;/li&gt;
&lt;li&gt;Win + Left mouse button = take screenshot on selected area&lt;/li&gt;
&lt;li&gt;Win + Mousewheel = Zoom In/Out&lt;/li&gt;
&lt;li&gt;Alt + Mousewheel = Transparent Window&lt;/li&gt;
&lt;li&gt;Alt + F8 = Resize Window&lt;/li&gt;
&lt;li&gt;Alt + F7 = Move Window&lt;/li&gt;
&lt;li&gt;Win + P = Add Helper&lt;/li&gt;
&lt;li&gt;F9 = show widget layer&lt;/li&gt;
&lt;li&gt;Shift + F9 = show water effects&lt;/li&gt;
&lt;li&gt;Win + Shift + Left mouse button = Fire Effects&lt;/li&gt;
&lt;li&gt;Win + Shift + C = Clear Fire Effects&lt;/li&gt;
&lt;li&gt;Win + Left mouse button = Annotate: Draw&lt;/li&gt;
&lt;li&gt;Win + 1 = Start annotation&lt;/li&gt;
&lt;li&gt;Win + 3 = End annotation&lt;/li&gt;
&lt;li&gt;Win + S = selects windows for grouping&lt;/li&gt;
&lt;li&gt;Win + T = Group Windows together&lt;/li&gt;
&lt;li&gt;Win + U = Ungroup Windows&lt;/li&gt;
&lt;li&gt;Win + Left/Right = Flip Windows&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Keyboard shortcut for Nautilus&lt;ul&gt;
&lt;li&gt;Shift + Ctrl + N = Create New Folder&lt;/li&gt;
&lt;li&gt;Ctrl + T = Delete selected file(s) to trash&lt;/li&gt;
&lt;li&gt;Alt + ENTER = Show File/Folder Properties&lt;/li&gt;
&lt;li&gt;Ctrl + 1 = Toggle View As Icons&lt;/li&gt;
&lt;li&gt;Ctrl + 2 = Toggle View As List&lt;/li&gt;
&lt;li&gt;Shift + Right = Open Directory (Only in List View)&lt;/li&gt;
&lt;li&gt;Shift + Left = Close Directory (Only in List View)&lt;/li&gt;
&lt;li&gt;Ctrl + S = Select Pattern&lt;/li&gt;
&lt;li&gt;F2 = Rename File&lt;/li&gt;
&lt;li&gt;Ctrl + A = Select all files and folders&lt;/li&gt;
&lt;li&gt;Ctrl + W = Close Window&lt;/li&gt;
&lt;li&gt;Ctrl + Shift + W = Close All Nautilus Windows&lt;/li&gt;
&lt;li&gt;Ctrl + R = Reload Nautilus Window&lt;/li&gt;
&lt;li&gt;Alt + Up = Open parent directory&lt;/li&gt;
&lt;li&gt;Alt + Left = Back&lt;/li&gt;
&lt;li&gt;Alt + Right = Forward&lt;/li&gt;
&lt;li&gt;Alt + Home = go to Home folder&lt;/li&gt;
&lt;li&gt;Ctrl + L = go to location bar&lt;/li&gt;
&lt;li&gt;F9 = Show sidepane&lt;/li&gt;
&lt;li&gt;Ctrl + H = Show Hidden Files&lt;/li&gt;
&lt;li&gt;Ctrl + + = Zoom In&lt;/li&gt;
&lt;li&gt;Ctrl + - = Zoom Out&lt;/li&gt;
&lt;li&gt;Ctrl + 0 = Normal Size &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2&gt;리눅스를 노트북에 사용할때&lt;/h2&gt;
&lt;p&gt;리눅스를 노트북에 최적화 시키는 툴에 &lt;a href="http://linrunner.de/en/tlp/tlp.html"&gt;TLP&lt;/a&gt;가 있습니다. TLP 는 리눅스 배포판과 하드웨어를 자동으로 인식해 노트북의 전원관리와 여러 트윅을 적용 시켜주기 때문에 아주 편리합니다. 다음과 같은 기능이 있습니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;배터리와 AC전원 유무에 따라 변경되는 효과&lt;ul&gt;
&lt;li&gt;Kernel laptop mode and dirty buffer timeouts;&lt;/li&gt;
&lt;li&gt;Processor frequency scaling including "turbo boost" / "turbo core";&lt;/li&gt;
&lt;li&gt;Power aware process scheduler for multi-core/hyper-threading;&lt;/li&gt;
&lt;li&gt;Hard disk advanced power management level and spin down timeout (per disk);&lt;/li&gt;
&lt;li&gt;SATA aggressive link power management (ALPM);&lt;/li&gt;
&lt;li&gt;PCI Express active state power management (PCIe ASPM) – Linux 2.6.35 and above;&lt;/li&gt;
&lt;li&gt;Runtime power management for PCI(e) bus devices – Linux 2.6.35 and above;&lt;/li&gt;
&lt;li&gt;Radeon KMS power management – Linux 2.6.35 and above, not fglrx;&lt;/li&gt;
&lt;li&gt;Wifi power saving mode – depending on kernel/driver;&lt;/li&gt;
&lt;li&gt;Power off optical drive in drive bay (on battery).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;추가적인 TLP 기능:&lt;ul&gt;
&lt;li&gt;I/O scheduler (per disk);&lt;/li&gt;
&lt;li&gt;USB autosuspend with blacklist;&lt;/li&gt;
&lt;li&gt;Audio power saving mode – hda_intel, ac97;&lt;/li&gt;
&lt;li&gt;Enable or disable integrated wifi, bluetooth or wwan devices upon system startup and shutdown;&lt;/li&gt;
&lt;li&gt;Restore radio device state on system startup (from previous shutdown);&lt;/li&gt;
&lt;li&gt;Radio device wizard: switch radios upon network connect/disconnect and dock/undock;&lt;/li&gt;
&lt;li&gt;Disable Wake On LAN;&lt;/li&gt;
&lt;li&gt;WWAN state is restored after suspend/hibernate;&lt;/li&gt;
&lt;li&gt;Undervolting of Intel processors – requires kernel with PHC-Patch;&lt;/li&gt;
&lt;li&gt;Battery charge thresholds – ThinkPads only;&lt;/li&gt;
&lt;li&gt;Recalibrate battery – ThinkPads only.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;설치법&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;충돌을 일으킬 수 있는 laptop-mode 제거&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;purge&lt;span class="w"&gt; &lt;/span&gt;laptop-mode-tools
&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;TLP설치&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;add-apt-repository&lt;span class="w"&gt; &lt;/span&gt;ppa:linrunner/tlp
sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;update
sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;tlp
&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;처음 실행후에는 부팅시 자동 실행된다.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;tlp&lt;span class="w"&gt; &lt;/span&gt;start
&lt;/pre&gt;&lt;/div&gt;

&lt;hr&gt;</description><category>Linux</category><category>trouble</category><guid>https://partrita.github.io/posts/linux-trouble-shooting/</guid><pubDate>Sun, 11 Oct 2015 02:11:03 GMT</pubDate></item></channel></rss>