<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Noname (Posts about setup)</title><link>https://partrita.github.io/</link><description></description><atom:link href="https://partrita.github.io/categories/setup.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2017 &lt;a href="mailto:partrita@gmail.com"&gt;Taeyoon&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;
&lt;img alt="Creative Commons License BY-NC-SA"
style="border-width:0; margin-bottom:12px;"
src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"&gt;&lt;/a&gt;</copyright><lastBuildDate>Wed, 20 Dec 2017 00:34:22 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Setup</title><link>https://partrita.github.io/posts/setup/</link><dc:creator>Taeyoon</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="1.-파이썬-설치"&gt;1. 파이썬 설치&lt;a class="anchor-link" href="https://partrita.github.io/posts/setup/#1.-%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%84%A4%EC%B9%98"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;파이썬은 아주 인기있는 프로그래밍 언어로, 웹 사이트는 물론 게임, 과학용 소프트웨어, 그래픽 소프트웨어 등 다양한 것을 만들 수 있습니다. 파이썬은 1980년대 후반에 &lt;strong&gt;귀도 반 로썸&lt;/strong&gt; 프로그래밍 언어를 기계 뿐만 아니라 인간도 읽을 수 있도록 만들고자 탄생한 언어입니다. 파이썬이 다른 프로그래밍 언어보다 훨씬 간단하게 보이고, 배우기도 쉬운 이유도 그 때문이죠. 이를 바탕으로 과거 15년 동안 &lt;strong&gt;numpy&lt;/strong&gt;,&lt;strong&gt;scipy&lt;/strong&gt;,&lt;strong&gt;matplotlib&lt;/strong&gt;,&lt;strong&gt;jupyter&lt;/strong&gt; 같이 널리 사용되는 라이브러리가 개발되어있습니다. 
파이썬은 사용중인 OS의 종류에 따라서 설치방법이 다릅니다.&lt;/p&gt;
&lt;h4 id="Windows"&gt;Windows&lt;a class="anchor-link" href="https://partrita.github.io/posts/setup/#Windows"&gt;¶&lt;/a&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;사용 중인 컴퓨터 윈도우 운영체제가 32비트인지 64비트인지 확인하세요.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.python.org/downloads/windows/"&gt;공식 웹사이트&lt;/a&gt;에서 다운로드 할 수 있습니다. &lt;ul&gt;
&lt;li&gt;64 비트 버전의 Windows인 경우 &lt;em&gt;Windows x86-64 executable installer&lt;/em&gt;를 다운로드하세요.&lt;/li&gt;
&lt;li&gt;32 비트 버전은 &lt;em&gt;Windows x86 executable installer&lt;/em&gt;을 다운로드하세요.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;설치 프로그램을 다운로드 한 후에 실행(더블 클릭)하고 지시 사항을 따르세요.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="OSX"&gt;OSX&lt;a class="anchor-link" href="https://partrita.github.io/posts/setup/#OSX"&gt;¶&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;&lt;a href="https://www.python.org/downloads/release/python-351/"&gt;웹 사이트&lt;/a&gt;로 가서 파이썬 설치 파일을 다운 받으세요.&lt;/p&gt;
&lt;h4 id="Linux"&gt;Linux&lt;a class="anchor-link" href="https://partrita.github.io/posts/setup/#Linux"&gt;¶&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;이미 파이썬이 설치되었을 겁니다. 설치된 버전을 확인하려면 콘솔을 열고 다음 명령을 입력하세요.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ python3 --version
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;&lt;p&gt;하지만 위의 방법보다는 저는 Anaconda를 사용하는것을 추천합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="2.-Anaconda-설치"&gt;2. Anaconda 설치&lt;a class="anchor-link" href="https://partrita.github.io/posts/setup/#2.-Anaconda-%EC%84%A4%EC%B9%98"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;파이썬 기반의 데이터 분석에 특화된 각종 OpenSource 라이브러리를 모아놓은 개발 플랫폼입니다. 무엇보다도 &lt;strong&gt;Panda, Numpy, Numba, Scipy, IPython, GPGPU, 과학, 수학, 데이터 분석&lt;/strong&gt;등과 관련된 수많은 라이브러리 한번에 그리고 &lt;strong&gt;의존성&lt;/strong&gt;(dependency)문제 없이 설치 할 수 있습니다. 또한 &lt;strong&gt;conda&lt;/strong&gt;라는 관리 라이브러리 매니저가 있어서 편리 합니다.&lt;a href="https://www.anaconda.com/"&gt;Anaconda 홈페이지&lt;/a&gt;&lt;/p&gt;
&lt;h4 id="Anaconda"&gt;Anaconda&lt;a class="anchor-link" href="https://partrita.github.io/posts/setup/#Anaconda"&gt;¶&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;공식 홈페이지에서 &lt;strong&gt;OS&lt;/strong&gt;에 맞는 파일을 다운받아 "Next"만 누르면 해결되므로 별도의 설명은 서술하지 않습니다.&lt;/p&gt;
&lt;h4 id="Miniconda"&gt;Miniconda&lt;a class="anchor-link" href="https://partrita.github.io/posts/setup/#Miniconda"&gt;¶&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;Anaconda&lt;/strong&gt;에서 라이브러리 관리 메니저인 &lt;strong&gt;conda&lt;/strong&gt;만을 설치 하고 싶다면 &lt;a href="https://conda.io/miniconda.html"&gt;miniconda&lt;/a&gt;를 다운받아 설치 하면 됩니다.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;개인적으로 &lt;strong&gt;Miniconda&lt;/strong&gt;를 추천합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="3.-Conda-명령어-사용법"&gt;3. Conda 명령어 사용법&lt;a class="anchor-link" href="https://partrita.github.io/posts/setup/#3.-Conda-%EB%AA%85%EB%A0%B9%EC%96%B4-%EC%82%AC%EC%9A%A9%EB%B2%95"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;conda&lt;/strong&gt;는 라이브러리 관리를 위해 제공되는 애플리케이션입니다. 파이썬 생태계의 라이브러리는 서로에 대해 아무 많이 의존적이기 때문에 각각의 버전이 너무 많은 문제가 발생하기도 합니다. 하지만 conda를 사용하면 이 모든 고민을 신경쓰지 않을 수 있습니다. 다시 말해, &lt;strong&gt;conda&lt;/strong&gt;는 파이썬 라이브러리의 교통정리를 해줍니다.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;conda 외에도 virtualenv을 사용하는 방법이 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="주요기능"&gt;주요기능&lt;a class="anchor-link" href="https://partrita.github.io/posts/setup/#%EC%A3%BC%EC%9A%94%EA%B8%B0%EB%8A%A5"&gt;¶&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;conda는 자동으로 의존성을 해결해 줍니다. 자주 사용하는 conda 명령어는 기억해 두세요.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;numpy를 기준으로 설명하겠습니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;기능&lt;/th&gt;
&lt;th&gt;명령어&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;라이브러리 설치&lt;/td&gt;
&lt;td&gt;conda install numpy &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;동시에 여러 라이브러리를 설치&lt;/td&gt;
&lt;td&gt;conda install numpy scipy pandas&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;특정 버전 설치&lt;/td&gt;
&lt;td&gt;conda install numpy=1.10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;라이브러리 제거&lt;/td&gt;
&lt;td&gt;conda remove numpy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;라이브러리 업데이트&lt;/td&gt;
&lt;td&gt;conda update numpy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;모든 라이브러리 업데이트&lt;/td&gt;
&lt;td&gt;conda update –all&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;설치된 목록 출력&lt;/td&gt;
&lt;td&gt;conda list&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;설치하려는 라이브러리 검색&lt;/td&gt;
&lt;td&gt;conda search numpy&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;&lt;p&gt;찾는 라이브러리가 없다면 &lt;strong&gt;pip&lt;/strong&gt;를 사용해보세요&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="가상환경-만들기"&gt;가상환경 만들기&lt;a class="anchor-link" href="https://partrita.github.io/posts/setup/#%EA%B0%80%EC%83%81%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0"&gt;¶&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;파이썬 라이브러리들의 의존성 문제를 피하기 위해 새로운 프로젝트를 시작할때면 가상환경을 만들어 작업하는것이 좋습니다. 여기서는 &lt;strong&gt;virtualenv&lt;/strong&gt; 대신에 &lt;strong&gt;conda&lt;/strong&gt;를 사용해서 간단히 만들어 보겠습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;새로운 가상환경 이름은 ENV_NAME&lt;/li&gt;
&lt;li&gt;사용할 Python 버전은 3이상으로 하겠습니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;터미널에 다음과 같이 입력하면 새로운 가상환경이 만들어 집니다.&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;conda create -n ENV_NAME &lt;span class="nv"&gt;python&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;가상환경을 사용하기 위해서는 &lt;em&gt;activate&lt;/em&gt; 시켜줘야 합니다. 활성화되면 터미널에 (ENV_NAME)이 표시됩니다.&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt; activate ENV_NAME
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;필요한 라이브러리들을 설치합니다.&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;conda install numpy pandas
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="가상환경-확인-및-제거"&gt;가상환경 확인 및 제거&lt;a class="anchor-link" href="https://partrita.github.io/posts/setup/#%EA%B0%80%EC%83%81%ED%99%98%EA%B2%BD-%ED%99%95%EC%9D%B8-%EB%B0%8F-%EC%A0%9C%EA%B1%B0"&gt;¶&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;가상환경의 목록을 확인하려면 아래와 같이 입력하세요.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;conda env list
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;가상환경을 삭제하려면 아래와 같이 입력하세요.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;conda env remove -n ENV_NAME
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="Conda-제거하기"&gt;Conda 제거하기&lt;a class="anchor-link" href="https://partrita.github.io/posts/setup/#Conda-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0"&gt;¶&lt;/a&gt;&lt;/h4&gt;&lt;h5 id="Windows"&gt;Windows&lt;a class="anchor-link" href="https://partrita.github.io/posts/setup/#Windows"&gt;¶&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;제어판에 들어가서 &lt;em&gt;Python (Anaconda)&lt;/em&gt; 혹은 &lt;em&gt;“Python (Miniconda)&lt;/em&gt;를 제거합니다.&lt;/p&gt;
&lt;h5 id="Linux,-OSX"&gt;Linux, OSX&lt;a class="anchor-link" href="https://partrita.github.io/posts/setup/#Linux,-OSX"&gt;¶&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;디렉토리만 삭제하면 됩니다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rm -rf ~/miniconda
rm -rf ~/anaconda
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="4.-코드-에디터"&gt;4. 코드 에디터&lt;a class="anchor-link" href="https://partrita.github.io/posts/setup/#4.-%EC%BD%94%EB%93%9C-%EC%97%90%EB%94%94%ED%84%B0"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;코드 에디터는 종류가 많고 다양해 자신의 취향에 따라 선택할 수 있습니다. 간단하지만 강력한 기능을 갖춘 에디터 프로그램을 아래에 추천합니다.&lt;/p&gt;
&lt;h4 id="Gedit"&gt;Gedit&lt;a class="anchor-link" href="https://partrita.github.io/posts/setup/#Gedit"&gt;¶&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Gedit는 모든 운영체제에서 사용 가능한 무료 오픈소스에요.&lt;/p&gt;
&lt;h4 id="Sublime-Text-3"&gt;Sublime Text 3&lt;a class="anchor-link" href="https://partrita.github.io/posts/setup/#Sublime-Text-3"&gt;¶&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Sublime Text는 가장 널리 알려진 프로그램으로 상용프로그램이지만, 무료로 사용할 수 있고 속도가 빨라요. 
물론 모든 운영체제에서 쓸 수 있어요.&lt;/p&gt;
&lt;h4 id="Atom"&gt;Atom&lt;a class="anchor-link" href="https://partrita.github.io/posts/setup/#Atom"&gt;¶&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Atom은 GitHub에서 만든 무료로 제공되는 오픈소스이며, 설치나 사용이 쉬워요. 모든 운영체제에서 쓸 수 있어요.&lt;/p&gt;
&lt;h4 id="VScode"&gt;VScode&lt;a class="anchor-link" href="https://partrita.github.io/posts/setup/#VScode"&gt;¶&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Microsoft에서 만든 무료 에디터에요. 설치와 사용이 쉽고 안정적입니다.&lt;/p&gt;
&lt;h3 id="왜-코드-에디터를-설치해야-하나요?"&gt;왜 코드 에디터를 설치해야 하나요?&lt;a class="anchor-link" href="https://partrita.github.io/posts/setup/#%EC%99%9C-%EC%BD%94%EB%93%9C-%EC%97%90%EB%94%94%ED%84%B0%EB%A5%BC-%EC%84%A4%EC%B9%98%ED%95%B4%EC%95%BC-%ED%95%98%EB%82%98%EC%9A%94?"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;워드나 노트패드가 있는데도, 굳이 코드 에디터 소프트웨어를 설치해야 하는 이유가 궁금할 거에요.&lt;br&gt;
첫 번째로 코드는 일반 텍스트여야 하는데, 워드나 텍스트에딧(Textedit)과 같은 프로그램에서는 일반 텍스트가 아닌 RTF(Rich Text Format)와 같은 사용자 서식을 쓴 리치 텍스트(폰트와 서식이 있는 텍스트)가 생성되기 때문입니다. 
두 번째는 코드 에디터 프로그램은 개발에 유용한 여러 기능을 제공하기 때문입니다. 대표적인 예로, 코드를 해석해 문법을 하이라이팅해주는 기능이라든가 큰따옴표("")를 자동으로 닫아주는 기능이지요. 앞으로 코드 에디터가 어떻게 작동하는지 알아볼 거에요. 곧 여러분은 내가 사용하는 코드 에디터를 제일 좋아하게 될 거랍니다.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
</description><category>setup</category><guid>https://partrita.github.io/posts/setup/</guid><pubDate>Thu, 14 Dec 2017 00:37:59 GMT</pubDate></item></channel></rss>